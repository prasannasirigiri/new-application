name: Build and Deploy

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      # ðŸ”¹ Ensure no previous builds interfere
      - name: Clean Workspace
        run: |
          rm -rf *
          git reset --hard

      # ðŸ”¹ Debug: Show Java files to check for duplicates
      - name: Debug File Structure
        run: find src/main/java/com/example -name "*.java"

      # ðŸ”¹ Set up Java 17 (Ensure correct version)
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'

      # ðŸ”¹ Clean and compile with Maven
      - name: Clean Maven Build
        run: mvn clean compile

      # ðŸ”¹ Verify build integrity
      - name: Verify Build
        run: mvn verify

      # ðŸ”¹ Configure AWS Credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # ðŸ”¹ Authenticate with AWS CodeArtifact
      - name: Authenticate with AWS CodeArtifact
        run: |
          CODEARTIFACT_AUTH_TOKEN=$(aws codeartifact get-authorization-token --domain new-application --query authorizationToken --output text)
          echo "CODEARTIFACT_AUTH_TOKEN=${CODEARTIFACT_AUTH_TOKEN}" >> $GITHUB_ENV

      # ðŸ”¹ Decode and store Maven settings.xml
      - name: Decode and Store Maven settings.xml
        run: |
          mkdir -p $HOME/.m2
          echo "${{ secrets.MAVEN_SETTINGS_XML }}" | base64 --decode > $HOME/.m2/settings.xml
          cat $HOME/.m2/settings.xml  # Debugging step to verify contents

      # ðŸ”¹ Final build and deployment
      - name: Build and Deploy to AWS CodeArtifact
        run: mvn clean deploy --settings $HOME/.m2/settings.xml
        env:
          CODEARTIFACT_AUTH_TOKEN: ${{ env.CODEARTIFACT_AUTH_TOKEN }}
